AWSTemplateFormatVersion: 2010-09-09
Description: network resources for www.goldenbearkin.com
Parameters:
  RootDomainName:
    Type: String
    Description: The site domain name (e.g. example.com)
  AcmCertificateArn:
    Type: String
Mappings:
  S3RegionMap:
    us-east-1:
      S3hostedzoneID: Z3AQBSTGFYJSTF
      S3websiteendpoint: s3-website-us-east-1.amazonaws.com
    us-west-1:
      S3hostedzoneID: Z2F56UZL2M1ACD
      S3websiteendpoint: s3-website-us-west-1.amazonaws.com
    us-west-2:
      S3hostedzoneID: Z3BJ6K6RIION7M
      S3websiteendpoint: s3-website-us-west-2.amazonaws.com
    eu-west-1:
      S3hostedzoneID: Z1BKCTXD74EZPE
      S3websiteendpoint: s3-website-eu-west-1.amazonaws.com
    ap-southeast-1:
      S3hostedzoneID: Z3O0J2DXBE1FTB
      S3websiteendpoint: s3-website-ap-southeast-1.amazonaws.com
    ap-southeast-2:
      S3hostedzoneID: Z1WCIGYICN2BYD
      S3websiteendpoint: s3-website-ap-southeast-2.amazonaws.com
    ap-northeast-1:
      S3hostedzoneID: Z2M4EHUR26P7ZW
      S3websiteendpoint: s3-website-ap-northeast-1.amazonaws.com
    sa-east-1:
      S3hostedzoneID: Z31GFT0UA1I2HV
      S3websiteendpoint: s3-website-sa-east-1.amazonaws.com
Resources:
  RootWebBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref RootDomainName
      AccessControl: BucketOwnerFullControl
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Ref WWWWebBucket
  WWWWebBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub www.${RootDomainName}
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
  WWWWebBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WWWWebBucket
      PolicyDocument:
        Statement:
        - Sid: PublicReadForGetBucketObjects
          Action: s3:GetObject
          Effect: Allow
          Resource: !Sub arn:aws:s3:::${WWWWebBucket}/*
          Principal: '*'
  DNS:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub ${RootDomainName}.
      RecordSets:
      - 
        Name: !Ref RootDomainName
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName: !Sub ${RootWebCloudFront.DomainName}
      -
        Name: !Sub www.${RootDomainName}
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName: !Sub ${WWWWebCloudFront.DomainName}
  RootWebCloudFront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
        - !Ref RootDomainName
        # - !Sub www.${RootDomainName}
        Origins:
        - DomainName: !Sub
          - ${RootWebBucket}.${Endpoint}
          - Endpoint: !FindInMap [ S3RegionMap, !Ref 'AWS::Region', S3websiteendpoint ]
          Id: S3Origin
          CustomOriginConfig:
            HTTPPort: 80
            HTTPSPort: 443
            OriginProtocolPolicy: http-only
        Enabled: true
        HttpVersion: http2
        DefaultRootObject: ''
        DefaultCacheBehavior:
          AllowedMethods: [GET, HEAD]
          CachedMethods: [GET, HEAD]
          Compress: true
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
            Headers: []
          DefaultTTL: 604800
          MinTTL: 604800
          MaxTTL: 604800
          SmoothStreaming: false
          ViewerProtocolPolicy: redirect-to-https
        # CustomErrorResponses:
        #   - ErrorCachingMinTTL: 5
        #     ErrorCode: 404
        #     ResponseCode: 200
        #     ResponsePagePath: /index.html
        PriceClass: PriceClass_200
        ViewerCertificate:
          SslSupportMethod: sni-only
          AcmCertificateArn: !Ref AcmCertificateArn
  WWWWebCloudFront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
        # - !Ref RootDomainName
        - !Sub www.${RootDomainName}
        Origins:
        - DomainName: !Sub
          - ${WWWWebBucket}.${Endpoint}
          - Endpoint: !FindInMap [ S3RegionMap, !Ref 'AWS::Region', S3websiteendpoint ]
          Id: S3Origin
          CustomOriginConfig:
            HTTPPort: 80
            HTTPSPort: 443
            OriginProtocolPolicy: http-only
        Enabled: true
        HttpVersion: http2
        DefaultRootObject: ''
        DefaultCacheBehavior:
          AllowedMethods: [GET, HEAD]
          CachedMethods: [GET, HEAD]
          Compress: true
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
            Headers: []
          DefaultTTL: 604800
          MinTTL: 604800
          MaxTTL: 604800
          SmoothStreaming: false
          ViewerProtocolPolicy: redirect-to-https
        # CustomErrorResponses:
        #   - ErrorCachingMinTTL: 5
        #     ErrorCode: 404
        #     ResponseCode: 200
        #     ResponsePagePath: /index.html
        PriceClass: PriceClass_200
        ViewerCertificate:
          SslSupportMethod: sni-only
          AcmCertificateArn: !Ref AcmCertificateArn
Outputs:
  domainName:
    Value: !GetAtt 
      - WWWWebCloudFront
      - DomainName
  DistributionId:
    Value: !Ref WWWWebCloudFront